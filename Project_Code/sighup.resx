<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="MemberpictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>